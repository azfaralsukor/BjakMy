{"version":3,"sources":["api/api.js","views/Details.jsx","views/List.jsx","serviceWorker.js","index.js","App.jsx"],"names":["api","axios","create","baseURL","getList","page","a","get","params","region","perPage","res","console","log","data","error","getDetails","id","useStyles","makeStyles","root","backgroundColor","collection","padding","paddingLeft","paddingRight","paper","paddingBottom","summary","marginLeft","title","fontFamily","fontWeight","fontSize","releaseYear","marginRight","titleh1","marginTop","marginBottom","body","description","lineHeight","addInfo","link","textDecoration","color","itemGrid","font","section","descriptionContainer","castAndCreditContainer","margin","details","display","type","homeButton","Details","classes","useState","setData","milisec2roundMin","ms","runtime","Math","round","CastAndCreditItem","label","valueArray","value","Grid","item","className","md","xs","Fragment","style","map","i","index","key","href","replace","length","AddInfoItem","useEffect","window","location","_","x","Button","onClick","assign","Paper","elevation","container","src","images","find","url","alt","width","height","meta","running_time","as","Divider","types","people","Set","role","filter","j","name","renderCastAndCredit","audios","join","languages","ageRating","tags","seasons","card","category","overflow","categoryTitle","maxHeight","cursor","content","media","movies","flexWrap","alignSelf","button","minWidth","Home","setPage","changePage","handleDetails","row_name","movie","Card","CardMedia","image","CardContent","justify","variant","disabled","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","path","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7f5cdedd.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: 'https://cdn-discover.hooq.tv/v1.2/discover/'\n});\n\nexport const getList = async page => {\n  try {\n    const res = await api.get('feed',\n      {\n        params: {\n          region: 'ID',\n          page: page,\n          perPage: 20\n        }\n      }\n    );\n    console.log(res);\n    return res.data;\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport const getDetails = async id => {\n  try {\n    const res = await api.get(`titles/${id}`);\n    console.log(res);\n    return res.data;\n  } catch (e) {\n    console.error(e);\n  }\n}","import { Button, Divider, Grid, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useEffect, useState } from \"react\";\nimport { getDetails } from \"../api/api\";\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: '#eeeeee',\n  },\n  collection: {\n    padding: 100,\n    paddingLeft: 200,\n    paddingRight: 200\n  },\n  paper: {\n    paddingBottom: 25\n  },\n  summary: {\n    marginLeft: 25\n  },\n  title: {\n    fontFamily: \"Roboto, Arial, sans-serif\",\n    fontWeight: 300,\n    fontSize: 30,\n  },\n  releaseYear: {\n    fontFamily: \"Roboto, Arial, sans-serif\",\n    fontWeight: 400,\n    fontSize: 13,\n    marginRight: 15\n  },\n  titleh1: {\n    marginTop: 25,\n    marginBottom: 10\n  },\n  body: {\n    paddingLeft: 50,\n    paddingRight: 50,\n  },\n  description: {\n    fontFamily: \"Roboto, Arial, sans-serif\",\n    fontWeight: 300,\n    fontSize: 14,\n    lineHeight: '24px'\n  },\n  addInfo: {\n    fontFamily: \"Roboto, Arial, sans-serif\",\n    fontWeight: 400,\n    fontSize: 14,\n  },\n  link: {\n    textDecoration: 'none',\n    color: '#a52714',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n  itemGrid: {\n    padding: '10px 15px 10px 0'\n  },\n  font: {\n    fontFamily: \"Roboto, Arial, sans-serif\",\n    fontSize: 14,\n    fontWeight: 300\n  },\n  section: {\n    marginTop: 30\n  },\n  descriptionContainer: {\n    marginTop: 30,\n    marginBottom: 30\n  },\n  castAndCreditContainer: {\n    margin: '20px 10px 30px 0'\n  },\n  details: {\n    display: 'block',\n  },\n  type: {\n    backgroundColor: 'yellow',\n    padding: 5\n  },\n  homeButton: {\n    marginBottom: 10\n  }\n});\n\nexport default function Details() {\n  const classes = useStyles();\n  const [data, setData] = useState();\n\n  const milisec2roundMin = ms => {\n    const runtime = Math.round(ms / (60 * 1000))\n    return `${runtime} minute${runtime > 1 ? 's' : ''}`;\n  }\n\n  const CastAndCreditItem = ({ label, value: valueArray }) => {\n    return <Grid item className={classes.itemGrid} md={4} xs={12}>\n      {valueArray &&\n        <React.Fragment>\n          <Grid className={classes.font}\n            style={{ marginBottom: 5 }}>\n            {label}\n          </Grid>\n          <Grid className={classes.font}>\n            {valueArray.map((i, index) =>\n              <a key={index} className={classes.link} href={`https://duckduckgo.com/?q=${i.replace(' ', '+')}`}>\n                {i}{index < valueArray.length - 1 && ', '}\n              </a>)\n            }\n          </Grid>\n        </React.Fragment>\n      }\n    </Grid>\n  }\n\n  const AddInfoItem = ({ label, value }) => {\n    return value ? <Grid item className={classes.itemGrid} style={{ padding: '10px 15px 10px 0' }} md={4} xs={12}>\n      <React.Fragment>\n        <Grid className={classes.font}\n          style={{ fontWeight: 500, marginBottom: 2 }}>\n          {label}\n        </Grid>\n        <Grid className={classes.font}>\n          {value}\n        </Grid>\n      </React.Fragment>\n    </Grid> : ''\n  }\n\n  const renderCastAndCredit = () => {\n    const types = data && data.data && data.data.people && [...new Set(data.data.people.map(i => i.role))]\n    return types.length ? <React.Fragment>\n      <div className={classes.section}>\n        <span className={classes.addInfo}>CAST AND CREDITS</span>\n      </div>\n      <Grid container className={classes.castAndCreditContainer}>\n        {types.map((i, index) =>\n          <CastAndCreditItem key={index} label={i} value={data.data.people.filter(j => j.role === i).map(i => i.name)} />\n        )}\n      </Grid>\n      <Divider />\n    </React.Fragment> : ''\n  }\n\n  useEffect(() => {\n    if (!data) {\n      (async function iife() {\n        window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, async (_, key, value) => {\n          if (key === 'id') {\n            let x = await getDetails(value);\n            console.log('d', x);\n            setData(x);\n          }\n        })\n      })();\n    }\n  }, [data])\n  return <div className={classes.root}>\n    {data && <div className={classes.collection}>\n      <Button className={classes.homeButton} onClick={() => window.location.assign('/')}>{'< Home'}</Button>\n      <Paper elevation={3} className={classes.paper}>\n        <Grid container>\n          <img\n            src={data.data.images.find(i => i.type === 'POSTER').url}\n            alt={data.data.title}\n            width=\"200\"\n            height=\"288\"\n          />\n          <Grid item className={classes.summary}>\n            <h1 className={classes.titleh1}><span className={classes.title}>{data.data.title}</span></h1>\n            <div>\n              <span className={classes.releaseYear}>{data.data.meta.releaseYear}</span>\n              <span className={classes.releaseYear}>{data.data.running_time ? milisec2roundMin(data.data.running_time) : ''}</span>\n            </div>\n            <h5><span className={classes.type}>{data.data.as}</span></h5>\n          </Grid>\n        </Grid>\n        <Grid container className={classes.body}>\n          <Grid container className={classes.descriptionContainer}>\n            <span className={classes.description}>{data.data.description}</span>\n          </Grid>\n          <Grid container className={classes.details}>\n            <Divider />\n            {renderCastAndCredit()}\n            <div className={classes.section}>\n              <span className={classes.addInfo}>ADDITIONAL INFORMATION</span>\n            </div>\n            <Grid container>\n              <AddInfoItem label='Audio Language' value={data.data.audios && data.data.audios.join(', ')} />\n              <AddInfoItem label='Subtitles' value={data.data.languages && data.data.languages.join(', ')} />\n              <AddInfoItem label='Run time' value={data.data.running_time && data.data.running_time ? milisec2roundMin(data.data.running_time) : ''} />\n              <AddInfoItem label='Rating' value={data.data.meta && data.data.meta.ageRating} />\n              <AddInfoItem label='Genre' value={data.data.tags && data.data.tags.map(i => i.label).join(', ')} />\n              <AddInfoItem label='Seasons' value={data.data.seasons && data.data.seasons.join(', ')} />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>}\n  </div>;\n}\n\n","import { Card, CardContent, CardMedia, Grid, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useEffect, useState } from \"react\";\nimport { getList } from \"../api/api\";\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: '#eeeeee',\n  },\n  collection: {\n    padding: 100\n  },\n  card: {\n    width: 163,\n    height: 330,\n    margin: 5\n  },\n  category: {\n    marginBottom: 30,\n    overflow: 'auto',\n    display: 'grid'\n  },\n  categoryTitle: {\n    fontFamily: \"Roboto, Arial, sans-serif;\",\n    fontWeight: 400,\n    fontSize: 28,\n    marginLeft: 5,\n    marginBottom: 15,\n  },\n  title: {\n    fontFamily: \"Roboto, Arial, sans-serif;\",\n    fontWeight: 300,\n    fontSize: 16,\n    maxHeight: 72,\n    overflow: 'hidden',\n    '&:hover': {\n      cursor: 'pointer',\n      textDecoration: 'underline'\n    }\n  },\n  content: {\n    padding: '7px 10px'\n  },\n  media: {\n    width: '100%',\n    height: '74%',\n    '&:hover': {\n      filter: 'brightness(.5)',\n      cursor: 'pointer'\n    }\n  },\n  movies: {\n    flexWrap: 'nowrap',\n    height: 350\n  },\n  page:{\n    alignSelf: 'center',\n    fontFamily: 'Roboto, Arial, sans-serif',\n    fontWeight: 300,\n    fontSize: 18,\n    paddingRight: 12\n  },\n  button:{\n    margin: 5,\n    minWidth: 'unset'\n  }\n});\n\nexport default function Home() {\n  const classes = useStyles();\n  const [data, setData] = useState();\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    if (!data) {\n      (async function iife() {\n        let res = await getList(1);\n        res = res && res.data.filter(i => i.type === 'Multi-Title-Manual-Curation');\n        console.log('x', res);\n        setData(res);\n      })();\n    }\n  }, [data])\n\n  const changePage = page => async () => {\n    setPage(page);\n    let x = await getList(page);\n    x = x && x.data.filter(i => i.type === 'Multi-Title-Manual-Curation');\n    console.log('x', x);\n    setData(x);\n  }\n\n  const handleDetails = id => () => {\n    id && window.location.assign(`/details?id=${id}`);\n  }\n  return <div className={classes.root}>\n    <div className={classes.collection}>\n      {data && data.map((category, i) =>\n        <React.Fragment key={i}>\n          <div className={classes.categoryTitle}>{category.row_name}</div>\n          <Grid container className={classes.category}>\n            <Grid container className={classes.movies}>\n              {category.data.map((movie, j) =>\n                <Card key={j} className={classes.card}>\n                  <CardMedia\n                    className={classes.media}\n                    image={movie.images.find(i => i.type === 'POSTER').url}\n                    onClick={handleDetails(movie.id)}\n                  />\n                  <CardContent className={classes.content}>\n                    <div className={classes.title} onClick={handleDetails(movie.id)}>\n                      {movie.title}\n                    </div>\n                  </CardContent>\n                </Card>\n              )}\n            </Grid>\n          </Grid>\n        </React.Fragment>\n      )}\n      <Grid container justify='center'>\n        <span className={classes.page}>Page</span>\n        <Button className={classes.button} variant=\"contained\" onClick={changePage(1)} disabled={page === 1} color=\"primary\">1</Button>\n        <Button className={classes.button} variant=\"contained\" onClick={changePage(2)} disabled={page === 2} color=\"primary\">2</Button>\n      </Grid>\n    </div>\n  </div>;\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Details from \"./views/Details\";\nimport List from \"./views/List\";\n\nexport default function App() {\n  return <React.Fragment>\n    <Router>\n      <Switch>\n        <Route path=\"/details\">\n          <Details />\n        </Route>\n        <Route path=\"/\">\n          <List />\n        </Route>\n      </Switch>\n    </Router>\n  </React.Fragment>;\n}\n"],"sourceRoot":""}